name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  version-management:
    name: Version Management
    uses: NextNodeSolutions/github-actions/.github/workflows/version-management.yml@main
    permissions:
      contents: write
      pull-requests: write
      actions: read
    with:
      node-version: '20'
      pnpm-version: '10.11.0'
      version-script: 'changeset:version'
      auto-merge: true
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-release:
    name: Publish Release
    needs: [version-management]
    if: needs.version-management.outputs.merged == 'true'
    uses: NextNodeSolutions/github-actions/.github/workflows/publish-release.yml@main
    permissions:
      contents: write
      id-token: write
      actions: read
    with:
      node-version: '20'
      pnpm-version: '10.11.0'
      publish-script: 'changeset:publish'
      build-script: 'build'
      enable-provenance: true
      dry-run: false
      create-github-release: true
      version: ${{ needs.version-management.outputs.version }}
      pr-number: ${{ needs.version-management.outputs.pr-number }}
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Custom post-release steps specific to config-manager
  post-release:
    name: Post-Release Tasks
    needs: [version-management, publish-release]
    if: needs.publish-release.outputs.published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Announce Release
        run: |
          echo "ðŸŽ‰ @nextnode/config-manager@${{ needs.version-management.outputs.version }} has been released!"
          echo "ðŸ“¦ NPM: https://www.npmjs.com/package/@nextnode/config-manager"
          echo "ðŸ”— GitHub Release: ${{ needs.publish-release.outputs.release-url }}"